@page "/config"

@using WyzeSenseBlazor.DataServices
@using WyzeSenseCore
@using AntDesign
@using WyzeSenseBlazor.DatabaseProvider.Models
@inject IConfigService configService


<h3>Configuration</h3>

<Table TItem="ConfigurationModel" DataSource="@config" RowClassName="@(_=>"editable-row")">
    <RowTemplate>
        <Column @bind-Field="@context.Setting" TData="string"/>
        <Column Width="50%" DataIndex="@nameof(context.Value)" TData="string">
            @if (editSetting != null && editSetting == context.Setting)
            {
                <Input Type="text" @bind-Value="context.Value" OnBlur="()=>stopConfigEdit(context)" AutoFocus />
            }
            else
            {
                <div class="editable-cell-value-wrap" style="padding-right:24px" @onclick="()=>startConfigEdit(context.Setting)">
                    @context.Value
                </div>
            }
        </Column>
    </RowTemplate>
</Table>
<style>
    .editable-cell {
        position: relative;
    }

    .editable-cell-value-wrap {
        padding: 5px 12px;
        cursor: pointer;
    }

    .editable-row:hover .editable-cell-value-wrap {
        padding: 4px 11px;
        border: 1px solid #d9d9d9;
        border-radius: 4px;
    }

    [data-theme='dark'] .editable-row:hover .editable-cell-value-wrap {
        border: 1px solid #434343;
    }
</style>

@code {

    List<ConfigurationModel> config;

    private string editSetting;

    protected override async Task OnInitializedAsync()
    {
        config = new();
        config.AddRange(await configService.GetConfigAsync());
    }
    private void startConfigEdit(string Id)
    {
        editSetting = Id;
    }
    private async Task stopConfigEdit(ConfigurationModel configurationModel)
    {
        await configService.UpdateConfigAsync(configurationModel);
        editSetting = null;
    }
}
