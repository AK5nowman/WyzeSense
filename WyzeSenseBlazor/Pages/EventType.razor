@page "/eventtypes"

@using WyzeSenseBlazor.DataServices
@using WyzeSenseCore
@using AntDesign
@using WyzeSenseBlazor.DatabaseProvider.Models
@inject IEventTypeService eventTypeService


<h3>Configuration</h3>

<Table TItem="WyzeEventTypeModel" DataSource="@eventTypes" RowClassName="@(_=>"editable-row")">
    <RowTemplate>
        <Column Width="20%" @bind-Field="@context.Id" />
        <Column DataIndex="@nameof(context.Type)" TData="string">
            @if (editTypeId == context.Id)
            {
                <Input Type="text" @bind-Value="context.Type" OnBlur="()=>stopEventTypeEdit(context)" AutoFocus />
            }
            else
            {
                <div class="editable-cell-value-wrap" style="padding-right:24px" @onclick="()=>startEventTypeEdit(context.Id)">
                    @context.Type
                </div>
            }
        </Column>
    </RowTemplate>
</Table>
<style>
    .editable-cell {
        position: relative;
    }

    .editable-cell-value-wrap {
        padding: 5px 12px;
        cursor: pointer;
    }

    .editable-row:hover .editable-cell-value-wrap {
        padding: 4px 11px;
        border: 1px solid #d9d9d9;
        border-radius: 4px;
    }

    [data-theme='dark'] .editable-row:hover .editable-cell-value-wrap {
        border: 1px solid #434343;
    }
</style>

@code {

    List<WyzeEventTypeModel> eventTypes;

    private int editTypeId;

    protected override async Task OnInitializedAsync()
    {
        eventTypes = new();
        eventTypes.AddRange(await eventTypeService.GetEventTypesAsync());
    }
    private void startEventTypeEdit(int Id)
    {
        editTypeId = Id;
    }
    private async Task stopEventTypeEdit(WyzeEventTypeModel wyzeEventTypeModel)
    {
        await eventTypeService.UpdateEventyTypeAsync(wyzeEventTypeModel);
        editTypeId = -1;
    }
}
