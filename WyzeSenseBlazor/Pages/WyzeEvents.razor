@page "/wyzeevents"

@using WyzeSenseBlazor.DataServices
@using WyzeSenseCore
@using AntDesign
@using WyzeSenseBlazor.DatabaseProvider.Models
@inject IWyzeSenseService SensorService
@implements IDisposable


<h3>Wyze Events</h3>

<Table Title="Events" TItem="WyzeEventModel" DataSource="@events" PageSize="@pageSize"  >
    <RowTemplate Context="eventContext">
        <Column @bind-Field="@eventContext.Time" Sortable="true"/>
        <Column Title="Type" TData="string">@eventContext.EventType.Type</Column>
        <Column Title="State" TData="string">
            @{
                var color = eventContext.State.Abnormal ? "red" : "green";
                <Tag Color="@color">@eventContext.State.Type</Tag>
            }
        </Column>
        <Column @bind-Field="@eventContext.Battery" />
        <Column @bind-Field="@eventContext.Signal" />
        <Column @bind-Field="@eventContext.EventId" />
    </RowTemplate>
</Table>

@code {

    List<WyzeEventModel> events;

    public int pageSize { get; set; } = 10;

    protected override async Task OnInitializedAsync()
    {
        events = new();

        this.SensorService.OnSensorAlarm += OnSensorAlarm;
        events.AddRange(await SensorService.GetWyzeEventsAsync());

    }
    private async void OnSensorAlarm(object sender, WyzeEventModel wyzeEvent)
    {
        events.Add(wyzeEvent);
        await InvokeAsync(this.StateHasChanged);
    }
    public void Dispose()
    {
        SensorService.OnSensorAlarm -= OnSensorAlarm;
    }
}
